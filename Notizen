Dateiarbeit:
1.
// Instanz von File muss nicht physisch vorhanden sein
File inputDatei = new File("c:\\daten\\inputfile.txt");
// Pruefen, ob die Datei (oder auch Pfad) vorhanden ist
boolean inputDateiExists = inputDatei.exists();
// Laenge der Datei ermitteln
long fileSize = inputDatei.length();
// Instanz von File muss nicht physisch vorhanden sein
File tiefesVerzeichnis = new File("c:/ein/tiefes/verzeichnis/mit/langem/pfad");
// falls Verzeichnis c:/ein/tiefes/verzeichnis/mit/langem/ vorhanden ist,
// wird nur letztes Verzeichnis erstellt
boolean mkDirOk = tiefesVerzeichnis.mkdir();
// falls mehrere uebergeordnete Verzeichnisse noch nicht vorhanden sind,
// werden auch uebergeordnete Verzeichnisse mit erstellt
boolean mkDirsOk = tiefesVerzeichnis.mkdirs();
2.
// Umbenennen oder Bewegen einer Datei
boolean renameOk = inputDatei.renameTo(new File("c:\\daten\\inputfile_neu.txt"));
// Datei oder Verzeichnis loeschen
boolean deleteOk = inputDatei.delete();
// Pruefen ob File-Instanz ein Verzeichnis oder eine Datei ist
boolean isDirectory = tiefesVerzeichnis.isDirectory();
// Verzeichnis lesen
File auszulesendesVerzeichnis = new File("c:/daten/temp");
// Verzeichnis als Array von Strings
String[] fileNames = auszulesendesVerzeichnis.list();
// Verzeichnis als Array von Files
File[] files = auszulesendesVerzeichnis.listFiles();
3.
Verzeichnisinhalt rekursiv ausgeben
11
public static void main(String[] args) {
// Verzeichnis lesen
File auszulesendesVerzeichnis = new File("c:/daten/temp/");
printAllJavaFiles(auszulesendesVerzeichnis, 1);
}
public static void dateienRekursivAusgeben(File directory, int verzeichnistiefe) {
if(directory.isDirectory()) {
printDateiname(directory, verzeichnistiefe);
File[] subDirectories = directory.listFiles();
for (File file : subDirectories) {
dateienRekursivAusgeben(file, verzeichnistiefe+1);
}
} else {
printDateiname(directory, verzeichnistiefe);
}
}
public static void printDateiname(File directory, int depth) {
if(directory.isDirectory()) { for(int i=0; i<depth; i++) { System.out.print("- "); }
} else { for(int i=0; i<depth; i++) { System.out.print(" "); }}
System.out.println(directory.getName());
